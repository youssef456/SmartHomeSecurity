
Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000062a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  0000062a  0000069e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000007bc  00000000  00000000  000006b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000005a2  00000000  00000000  00000e74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e2       	ldi	r30, 0x2A	; 42
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 bd 02 	call	0x57a	; 0x57a <main>
  7a:	0c 94 13 03 	jmp	0x626	; 0x626 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_void_set_port_dir>:


/* implementing the driver functions  */
/* set Portx Direction Function       */

void DIO_void_set_port_dir(u8 copy_u8_portID, u8 port_copy_dir){
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <DIO_void_set_port_dir+0x6>
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62
  8c:	89 83       	std	Y+1, r24	; 0x01
  8e:	6a 83       	std	Y+2, r22	; 0x02
	 *  Also general rule INPUT --> 0 // OUTPUT --> 1
	 *
	 *
	 */

	*(DIO_DDRx[copy_u8_portID]) = port_copy_dir;
  90:	89 81       	ldd	r24, Y+1	; 0x01
  92:	88 2f       	mov	r24, r24
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	88 0f       	add	r24, r24
  98:	99 1f       	adc	r25, r25
  9a:	fc 01       	movw	r30, r24
  9c:	e8 59       	subi	r30, 0x98	; 152
  9e:	ff 4f       	sbci	r31, 0xFF	; 255
  a0:	01 90       	ld	r0, Z+
  a2:	f0 81       	ld	r31, Z
  a4:	e0 2d       	mov	r30, r0
  a6:	8a 81       	ldd	r24, Y+2	; 0x02
  a8:	80 83       	st	Z, r24

}
  aa:	0f 90       	pop	r0
  ac:	0f 90       	pop	r0
  ae:	cf 91       	pop	r28
  b0:	df 91       	pop	r29
  b2:	08 95       	ret

000000b4 <DIO_void_set_pin_dir>:

void DIO_void_set_pin_dir(u8 copy_u8_portID, u8 copy_u8_pinID, u8 pin_copy_dir){
  b4:	df 93       	push	r29
  b6:	cf 93       	push	r28
  b8:	00 d0       	rcall	.+0      	; 0xba <DIO_void_set_pin_dir+0x6>
  ba:	0f 92       	push	r0
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
  c0:	89 83       	std	Y+1, r24	; 0x01
  c2:	6a 83       	std	Y+2, r22	; 0x02
  c4:	4b 83       	std	Y+3, r20	; 0x03
	 *  pin_copy_dir using the predefined macro INPUT //OUTPUT
	 *
	 *
	 */

	assign_Bit(*(DIO_DDRx[copy_u8_portID]),copy_u8_pinID,pin_copy_dir);
  c6:	8b 81       	ldd	r24, Y+3	; 0x03
  c8:	81 30       	cpi	r24, 0x01	; 1
  ca:	29 f5       	brne	.+74     	; 0x116 <DIO_void_set_pin_dir+0x62>
  cc:	89 81       	ldd	r24, Y+1	; 0x01
  ce:	88 2f       	mov	r24, r24
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	fc 01       	movw	r30, r24
  d8:	e8 59       	subi	r30, 0x98	; 152
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	a0 81       	ld	r26, Z
  de:	b1 81       	ldd	r27, Z+1	; 0x01
  e0:	89 81       	ldd	r24, Y+1	; 0x01
  e2:	88 2f       	mov	r24, r24
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	fc 01       	movw	r30, r24
  ec:	e8 59       	subi	r30, 0x98	; 152
  ee:	ff 4f       	sbci	r31, 0xFF	; 255
  f0:	01 90       	ld	r0, Z+
  f2:	f0 81       	ld	r31, Z
  f4:	e0 2d       	mov	r30, r0
  f6:	80 81       	ld	r24, Z
  f8:	48 2f       	mov	r20, r24
  fa:	8a 81       	ldd	r24, Y+2	; 0x02
  fc:	28 2f       	mov	r18, r24
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 2e       	mov	r0, r18
 106:	02 c0       	rjmp	.+4      	; 0x10c <DIO_void_set_pin_dir+0x58>
 108:	88 0f       	add	r24, r24
 10a:	99 1f       	adc	r25, r25
 10c:	0a 94       	dec	r0
 10e:	e2 f7       	brpl	.-8      	; 0x108 <DIO_void_set_pin_dir+0x54>
 110:	84 2b       	or	r24, r20
 112:	8c 93       	st	X, r24
 114:	25 c0       	rjmp	.+74     	; 0x160 <DIO_void_set_pin_dir+0xac>
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	88 2f       	mov	r24, r24
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	fc 01       	movw	r30, r24
 122:	e8 59       	subi	r30, 0x98	; 152
 124:	ff 4f       	sbci	r31, 0xFF	; 255
 126:	a0 81       	ld	r26, Z
 128:	b1 81       	ldd	r27, Z+1	; 0x01
 12a:	89 81       	ldd	r24, Y+1	; 0x01
 12c:	88 2f       	mov	r24, r24
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	fc 01       	movw	r30, r24
 136:	e8 59       	subi	r30, 0x98	; 152
 138:	ff 4f       	sbci	r31, 0xFF	; 255
 13a:	01 90       	ld	r0, Z+
 13c:	f0 81       	ld	r31, Z
 13e:	e0 2d       	mov	r30, r0
 140:	80 81       	ld	r24, Z
 142:	48 2f       	mov	r20, r24
 144:	8a 81       	ldd	r24, Y+2	; 0x02
 146:	28 2f       	mov	r18, r24
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 2e       	mov	r0, r18
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_void_set_pin_dir+0xa2>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_void_set_pin_dir+0x9e>
 15a:	80 95       	com	r24
 15c:	84 23       	and	r24, r20
 15e:	8c 93       	st	X, r24

}
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	cf 91       	pop	r28
 168:	df 91       	pop	r29
 16a:	08 95       	ret

0000016c <DIO_void_port_pullup>:

void DIO_void_port_pullup(u8 copy_u8_portID){
 16c:	df 93       	push	r29
 16e:	cf 93       	push	r28
 170:	0f 92       	push	r0
 172:	cd b7       	in	r28, 0x3d	; 61
 174:	de b7       	in	r29, 0x3e	; 62
 176:	89 83       	std	Y+1, r24	; 0x01
	 *  so that is what the function does
	 *  using the pullup for any button prevents the floating effect
	 *
	 *
	 */
	*(DIO_DDRx[copy_u8_portID]) = INPUT;
 178:	89 81       	ldd	r24, Y+1	; 0x01
 17a:	88 2f       	mov	r24, r24
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	fc 01       	movw	r30, r24
 184:	e8 59       	subi	r30, 0x98	; 152
 186:	ff 4f       	sbci	r31, 0xFF	; 255
 188:	01 90       	ld	r0, Z+
 18a:	f0 81       	ld	r31, Z
 18c:	e0 2d       	mov	r30, r0
 18e:	10 82       	st	Z, r1
	*(DIO_PORTx[copy_u8_portID]) = PORT_MAX;
 190:	89 81       	ldd	r24, Y+1	; 0x01
 192:	88 2f       	mov	r24, r24
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	fc 01       	movw	r30, r24
 19c:	e0 59       	subi	r30, 0x90	; 144
 19e:	ff 4f       	sbci	r31, 0xFF	; 255
 1a0:	01 90       	ld	r0, Z+
 1a2:	f0 81       	ld	r31, Z
 1a4:	e0 2d       	mov	r30, r0
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	80 83       	st	Z, r24
}
 1aa:	0f 90       	pop	r0
 1ac:	cf 91       	pop	r28
 1ae:	df 91       	pop	r29
 1b0:	08 95       	ret

000001b2 <DIO_void_pin_pullup>:

void DIO_void_pin_pullup(u8 copy_u8_portID, u8 copy_u8_pinID){
 1b2:	df 93       	push	r29
 1b4:	cf 93       	push	r28
 1b6:	00 d0       	rcall	.+0      	; 0x1b8 <DIO_void_pin_pullup+0x6>
 1b8:	cd b7       	in	r28, 0x3d	; 61
 1ba:	de b7       	in	r29, 0x3e	; 62
 1bc:	89 83       	std	Y+1, r24	; 0x01
 1be:	6a 83       	std	Y+2, r22	; 0x02
	/*  the function works as the one that set pullup for the whole port
	 *
	 *
	 */

	clear_Bit(*(DIO_DDRx[copy_u8_portID]),copy_u8_pinID);
 1c0:	89 81       	ldd	r24, Y+1	; 0x01
 1c2:	88 2f       	mov	r24, r24
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	fc 01       	movw	r30, r24
 1cc:	e8 59       	subi	r30, 0x98	; 152
 1ce:	ff 4f       	sbci	r31, 0xFF	; 255
 1d0:	a0 81       	ld	r26, Z
 1d2:	b1 81       	ldd	r27, Z+1	; 0x01
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	88 2f       	mov	r24, r24
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	fc 01       	movw	r30, r24
 1e0:	e8 59       	subi	r30, 0x98	; 152
 1e2:	ff 4f       	sbci	r31, 0xFF	; 255
 1e4:	01 90       	ld	r0, Z+
 1e6:	f0 81       	ld	r31, Z
 1e8:	e0 2d       	mov	r30, r0
 1ea:	80 81       	ld	r24, Z
 1ec:	48 2f       	mov	r20, r24
 1ee:	8a 81       	ldd	r24, Y+2	; 0x02
 1f0:	28 2f       	mov	r18, r24
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_void_pin_pullup+0x4c>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	2a 95       	dec	r18
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_void_pin_pullup+0x48>
 202:	80 95       	com	r24
 204:	84 23       	and	r24, r20
 206:	8c 93       	st	X, r24
	set_Bit(*(DIO_PORTx[copy_u8_portID]),copy_u8_pinID);
 208:	89 81       	ldd	r24, Y+1	; 0x01
 20a:	88 2f       	mov	r24, r24
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	fc 01       	movw	r30, r24
 214:	e0 59       	subi	r30, 0x90	; 144
 216:	ff 4f       	sbci	r31, 0xFF	; 255
 218:	a0 81       	ld	r26, Z
 21a:	b1 81       	ldd	r27, Z+1	; 0x01
 21c:	89 81       	ldd	r24, Y+1	; 0x01
 21e:	88 2f       	mov	r24, r24
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	fc 01       	movw	r30, r24
 228:	e0 59       	subi	r30, 0x90	; 144
 22a:	ff 4f       	sbci	r31, 0xFF	; 255
 22c:	01 90       	ld	r0, Z+
 22e:	f0 81       	ld	r31, Z
 230:	e0 2d       	mov	r30, r0
 232:	80 81       	ld	r24, Z
 234:	48 2f       	mov	r20, r24
 236:	8a 81       	ldd	r24, Y+2	; 0x02
 238:	28 2f       	mov	r18, r24
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 2e       	mov	r0, r18
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_void_pin_pullup+0x96>
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	0a 94       	dec	r0
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_void_pin_pullup+0x92>
 24c:	84 2b       	or	r24, r20
 24e:	8c 93       	st	X, r24

}
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
 254:	cf 91       	pop	r28
 256:	df 91       	pop	r29
 258:	08 95       	ret

0000025a <DIO_void_set_port>:

void DIO_void_set_port(u8 copy_u8_portID){
 25a:	df 93       	push	r29
 25c:	cf 93       	push	r28
 25e:	0f 92       	push	r0
 260:	cd b7       	in	r28, 0x3d	; 61
 262:	de b7       	in	r29, 0x3e	; 62
 264:	89 83       	std	Y+1, r24	; 0x01
	 *
	 */



	*(DIO_PORTx[copy_u8_portID]) = PORT_MAX;
 266:	89 81       	ldd	r24, Y+1	; 0x01
 268:	88 2f       	mov	r24, r24
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	fc 01       	movw	r30, r24
 272:	e0 59       	subi	r30, 0x90	; 144
 274:	ff 4f       	sbci	r31, 0xFF	; 255
 276:	01 90       	ld	r0, Z+
 278:	f0 81       	ld	r31, Z
 27a:	e0 2d       	mov	r30, r0
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	80 83       	st	Z, r24

}
 280:	0f 90       	pop	r0
 282:	cf 91       	pop	r28
 284:	df 91       	pop	r29
 286:	08 95       	ret

00000288 <DIO_void_clear_port>:

void DIO_void_clear_port(u8 copy_u8_portID){
 288:	df 93       	push	r29
 28a:	cf 93       	push	r28
 28c:	0f 92       	push	r0
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	89 83       	std	Y+1, r24	; 0x01
	 *
	 *
	 */


	*(DIO_PORTx[copy_u8_portID]) = LOW;
 294:	89 81       	ldd	r24, Y+1	; 0x01
 296:	88 2f       	mov	r24, r24
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	fc 01       	movw	r30, r24
 2a0:	e0 59       	subi	r30, 0x90	; 144
 2a2:	ff 4f       	sbci	r31, 0xFF	; 255
 2a4:	01 90       	ld	r0, Z+
 2a6:	f0 81       	ld	r31, Z
 2a8:	e0 2d       	mov	r30, r0
 2aa:	10 82       	st	Z, r1

}
 2ac:	0f 90       	pop	r0
 2ae:	cf 91       	pop	r28
 2b0:	df 91       	pop	r29
 2b2:	08 95       	ret

000002b4 <DIO_void_assign_port>:

void DIO_void_assign_port(u8 copy_u8_portID, u8 copy_value){
 2b4:	df 93       	push	r29
 2b6:	cf 93       	push	r28
 2b8:	00 d0       	rcall	.+0      	; 0x2ba <DIO_void_assign_port+0x6>
 2ba:	cd b7       	in	r28, 0x3d	; 61
 2bc:	de b7       	in	r29, 0x3e	; 62
 2be:	89 83       	std	Y+1, r24	; 0x01
 2c0:	6a 83       	std	Y+2, r22	; 0x02
	 *
	 */



	*(DIO_PORTx[copy_u8_portID]) = copy_value;
 2c2:	89 81       	ldd	r24, Y+1	; 0x01
 2c4:	88 2f       	mov	r24, r24
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	fc 01       	movw	r30, r24
 2ce:	e0 59       	subi	r30, 0x90	; 144
 2d0:	ff 4f       	sbci	r31, 0xFF	; 255
 2d2:	01 90       	ld	r0, Z+
 2d4:	f0 81       	ld	r31, Z
 2d6:	e0 2d       	mov	r30, r0
 2d8:	8a 81       	ldd	r24, Y+2	; 0x02
 2da:	80 83       	st	Z, r24

}
 2dc:	0f 90       	pop	r0
 2de:	0f 90       	pop	r0
 2e0:	cf 91       	pop	r28
 2e2:	df 91       	pop	r29
 2e4:	08 95       	ret

000002e6 <DIO_void_toggle_port>:

void DIO_void_toggle_port(u8 copy_u8_portID){
 2e6:	df 93       	push	r29
 2e8:	cf 93       	push	r28
 2ea:	0f 92       	push	r0
 2ec:	cd b7       	in	r28, 0x3d	; 61
 2ee:	de b7       	in	r29, 0x3e	; 62
 2f0:	89 83       	std	Y+1, r24	; 0x01
	 *
	 *
	 */


	*(DIO_PORTx[copy_u8_portID]) ^= PORT_MAX;
 2f2:	89 81       	ldd	r24, Y+1	; 0x01
 2f4:	88 2f       	mov	r24, r24
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	88 0f       	add	r24, r24
 2fa:	99 1f       	adc	r25, r25
 2fc:	fc 01       	movw	r30, r24
 2fe:	e0 59       	subi	r30, 0x90	; 144
 300:	ff 4f       	sbci	r31, 0xFF	; 255
 302:	a0 81       	ld	r26, Z
 304:	b1 81       	ldd	r27, Z+1	; 0x01
 306:	89 81       	ldd	r24, Y+1	; 0x01
 308:	88 2f       	mov	r24, r24
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	fc 01       	movw	r30, r24
 312:	e0 59       	subi	r30, 0x90	; 144
 314:	ff 4f       	sbci	r31, 0xFF	; 255
 316:	01 90       	ld	r0, Z+
 318:	f0 81       	ld	r31, Z
 31a:	e0 2d       	mov	r30, r0
 31c:	80 81       	ld	r24, Z
 31e:	80 95       	com	r24
 320:	8c 93       	st	X, r24
}
 322:	0f 90       	pop	r0
 324:	cf 91       	pop	r28
 326:	df 91       	pop	r29
 328:	08 95       	ret

0000032a <DIO_void_set_pin>:

void DIO_void_set_pin(u8 copy_u8_portID , u8 copy_u8_pinID){
 32a:	df 93       	push	r29
 32c:	cf 93       	push	r28
 32e:	00 d0       	rcall	.+0      	; 0x330 <DIO_void_set_pin+0x6>
 330:	cd b7       	in	r28, 0x3d	; 61
 332:	de b7       	in	r29, 0x3e	; 62
 334:	89 83       	std	Y+1, r24	; 0x01
 336:	6a 83       	std	Y+2, r22	; 0x02
	 *
	 *
	 */


	set_Bit(*(DIO_PORTx[copy_u8_portID]),copy_u8_pinID);
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	88 2f       	mov	r24, r24
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	fc 01       	movw	r30, r24
 344:	e0 59       	subi	r30, 0x90	; 144
 346:	ff 4f       	sbci	r31, 0xFF	; 255
 348:	a0 81       	ld	r26, Z
 34a:	b1 81       	ldd	r27, Z+1	; 0x01
 34c:	89 81       	ldd	r24, Y+1	; 0x01
 34e:	88 2f       	mov	r24, r24
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	fc 01       	movw	r30, r24
 358:	e0 59       	subi	r30, 0x90	; 144
 35a:	ff 4f       	sbci	r31, 0xFF	; 255
 35c:	01 90       	ld	r0, Z+
 35e:	f0 81       	ld	r31, Z
 360:	e0 2d       	mov	r30, r0
 362:	80 81       	ld	r24, Z
 364:	48 2f       	mov	r20, r24
 366:	8a 81       	ldd	r24, Y+2	; 0x02
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	02 2e       	mov	r0, r18
 372:	02 c0       	rjmp	.+4      	; 0x378 <DIO_void_set_pin+0x4e>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	0a 94       	dec	r0
 37a:	e2 f7       	brpl	.-8      	; 0x374 <DIO_void_set_pin+0x4a>
 37c:	84 2b       	or	r24, r20
 37e:	8c 93       	st	X, r24
}
 380:	0f 90       	pop	r0
 382:	0f 90       	pop	r0
 384:	cf 91       	pop	r28
 386:	df 91       	pop	r29
 388:	08 95       	ret

0000038a <DIO_void_clear_pin>:

void DIO_void_clear_pin(u8 copy_u8_portID , u8 copy_u8_pinID){
 38a:	df 93       	push	r29
 38c:	cf 93       	push	r28
 38e:	00 d0       	rcall	.+0      	; 0x390 <DIO_void_clear_pin+0x6>
 390:	cd b7       	in	r28, 0x3d	; 61
 392:	de b7       	in	r29, 0x3e	; 62
 394:	89 83       	std	Y+1, r24	; 0x01
 396:	6a 83       	std	Y+2, r22	; 0x02
	 *
	 *
	 */


	clear_Bit(*(DIO_PORTx[copy_u8_portID]),copy_u8_pinID);
 398:	89 81       	ldd	r24, Y+1	; 0x01
 39a:	88 2f       	mov	r24, r24
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	fc 01       	movw	r30, r24
 3a4:	e0 59       	subi	r30, 0x90	; 144
 3a6:	ff 4f       	sbci	r31, 0xFF	; 255
 3a8:	a0 81       	ld	r26, Z
 3aa:	b1 81       	ldd	r27, Z+1	; 0x01
 3ac:	89 81       	ldd	r24, Y+1	; 0x01
 3ae:	88 2f       	mov	r24, r24
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	fc 01       	movw	r30, r24
 3b8:	e0 59       	subi	r30, 0x90	; 144
 3ba:	ff 4f       	sbci	r31, 0xFF	; 255
 3bc:	01 90       	ld	r0, Z+
 3be:	f0 81       	ld	r31, Z
 3c0:	e0 2d       	mov	r30, r0
 3c2:	80 81       	ld	r24, Z
 3c4:	48 2f       	mov	r20, r24
 3c6:	8a 81       	ldd	r24, Y+2	; 0x02
 3c8:	28 2f       	mov	r18, r24
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	02 2e       	mov	r0, r18
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_void_clear_pin+0x4e>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	0a 94       	dec	r0
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_void_clear_pin+0x4a>
 3dc:	80 95       	com	r24
 3de:	84 23       	and	r24, r20
 3e0:	8c 93       	st	X, r24
}
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	cf 91       	pop	r28
 3e8:	df 91       	pop	r29
 3ea:	08 95       	ret

000003ec <DIO_void_assign_pin>:

void DIO_void_assign_pin(u8 copy_u8_portID,u8 copy_u8_pinID ,u8 copy_value){
 3ec:	df 93       	push	r29
 3ee:	cf 93       	push	r28
 3f0:	00 d0       	rcall	.+0      	; 0x3f2 <DIO_void_assign_pin+0x6>
 3f2:	0f 92       	push	r0
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	89 83       	std	Y+1, r24	; 0x01
 3fa:	6a 83       	std	Y+2, r22	; 0x02
 3fc:	4b 83       	std	Y+3, r20	; 0x03
	 *
	 */



	assign_Bit(*(DIO_PORTx[copy_u8_portID]),copy_u8_pinID,copy_value);
 3fe:	8b 81       	ldd	r24, Y+3	; 0x03
 400:	81 30       	cpi	r24, 0x01	; 1
 402:	29 f5       	brne	.+74     	; 0x44e <DIO_void_assign_pin+0x62>
 404:	89 81       	ldd	r24, Y+1	; 0x01
 406:	88 2f       	mov	r24, r24
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	88 0f       	add	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	fc 01       	movw	r30, r24
 410:	e0 59       	subi	r30, 0x90	; 144
 412:	ff 4f       	sbci	r31, 0xFF	; 255
 414:	a0 81       	ld	r26, Z
 416:	b1 81       	ldd	r27, Z+1	; 0x01
 418:	89 81       	ldd	r24, Y+1	; 0x01
 41a:	88 2f       	mov	r24, r24
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	fc 01       	movw	r30, r24
 424:	e0 59       	subi	r30, 0x90	; 144
 426:	ff 4f       	sbci	r31, 0xFF	; 255
 428:	01 90       	ld	r0, Z+
 42a:	f0 81       	ld	r31, Z
 42c:	e0 2d       	mov	r30, r0
 42e:	80 81       	ld	r24, Z
 430:	48 2f       	mov	r20, r24
 432:	8a 81       	ldd	r24, Y+2	; 0x02
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	02 2e       	mov	r0, r18
 43e:	02 c0       	rjmp	.+4      	; 0x444 <DIO_void_assign_pin+0x58>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	0a 94       	dec	r0
 446:	e2 f7       	brpl	.-8      	; 0x440 <DIO_void_assign_pin+0x54>
 448:	84 2b       	or	r24, r20
 44a:	8c 93       	st	X, r24
 44c:	25 c0       	rjmp	.+74     	; 0x498 <DIO_void_assign_pin+0xac>
 44e:	89 81       	ldd	r24, Y+1	; 0x01
 450:	88 2f       	mov	r24, r24
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	fc 01       	movw	r30, r24
 45a:	e0 59       	subi	r30, 0x90	; 144
 45c:	ff 4f       	sbci	r31, 0xFF	; 255
 45e:	a0 81       	ld	r26, Z
 460:	b1 81       	ldd	r27, Z+1	; 0x01
 462:	89 81       	ldd	r24, Y+1	; 0x01
 464:	88 2f       	mov	r24, r24
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	88 0f       	add	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	fc 01       	movw	r30, r24
 46e:	e0 59       	subi	r30, 0x90	; 144
 470:	ff 4f       	sbci	r31, 0xFF	; 255
 472:	01 90       	ld	r0, Z+
 474:	f0 81       	ld	r31, Z
 476:	e0 2d       	mov	r30, r0
 478:	80 81       	ld	r24, Z
 47a:	48 2f       	mov	r20, r24
 47c:	8a 81       	ldd	r24, Y+2	; 0x02
 47e:	28 2f       	mov	r18, r24
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	02 2e       	mov	r0, r18
 488:	02 c0       	rjmp	.+4      	; 0x48e <DIO_void_assign_pin+0xa2>
 48a:	88 0f       	add	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	0a 94       	dec	r0
 490:	e2 f7       	brpl	.-8      	; 0x48a <DIO_void_assign_pin+0x9e>
 492:	80 95       	com	r24
 494:	84 23       	and	r24, r20
 496:	8c 93       	st	X, r24
}
 498:	0f 90       	pop	r0
 49a:	0f 90       	pop	r0
 49c:	0f 90       	pop	r0
 49e:	cf 91       	pop	r28
 4a0:	df 91       	pop	r29
 4a2:	08 95       	ret

000004a4 <DIO_void_toggle_pin>:

void DIO_void_toggle_pin(u8 copy_u8_portID , u8 copy_u8_pinID){
 4a4:	df 93       	push	r29
 4a6:	cf 93       	push	r28
 4a8:	00 d0       	rcall	.+0      	; 0x4aa <DIO_void_toggle_pin+0x6>
 4aa:	cd b7       	in	r28, 0x3d	; 61
 4ac:	de b7       	in	r29, 0x3e	; 62
 4ae:	89 83       	std	Y+1, r24	; 0x01
 4b0:	6a 83       	std	Y+2, r22	; 0x02
	 *
	 *
	 */


	toggle_Bit(*(DIO_PORTx[copy_u8_portID]),copy_u8_pinID);
 4b2:	89 81       	ldd	r24, Y+1	; 0x01
 4b4:	88 2f       	mov	r24, r24
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	88 0f       	add	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	fc 01       	movw	r30, r24
 4be:	e0 59       	subi	r30, 0x90	; 144
 4c0:	ff 4f       	sbci	r31, 0xFF	; 255
 4c2:	a0 81       	ld	r26, Z
 4c4:	b1 81       	ldd	r27, Z+1	; 0x01
 4c6:	89 81       	ldd	r24, Y+1	; 0x01
 4c8:	88 2f       	mov	r24, r24
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	88 0f       	add	r24, r24
 4ce:	99 1f       	adc	r25, r25
 4d0:	fc 01       	movw	r30, r24
 4d2:	e0 59       	subi	r30, 0x90	; 144
 4d4:	ff 4f       	sbci	r31, 0xFF	; 255
 4d6:	01 90       	ld	r0, Z+
 4d8:	f0 81       	ld	r31, Z
 4da:	e0 2d       	mov	r30, r0
 4dc:	80 81       	ld	r24, Z
 4de:	48 2f       	mov	r20, r24
 4e0:	8a 81       	ldd	r24, Y+2	; 0x02
 4e2:	28 2f       	mov	r18, r24
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	02 2e       	mov	r0, r18
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <DIO_void_toggle_pin+0x4e>
 4ee:	88 0f       	add	r24, r24
 4f0:	99 1f       	adc	r25, r25
 4f2:	0a 94       	dec	r0
 4f4:	e2 f7       	brpl	.-8      	; 0x4ee <DIO_void_toggle_pin+0x4a>
 4f6:	84 27       	eor	r24, r20
 4f8:	8c 93       	st	X, r24

}
 4fa:	0f 90       	pop	r0
 4fc:	0f 90       	pop	r0
 4fe:	cf 91       	pop	r28
 500:	df 91       	pop	r29
 502:	08 95       	ret

00000504 <DIO_u8_get_port>:

u8 DIO_u8_get_port(u8 copy_u8_portID){
 504:	df 93       	push	r29
 506:	cf 93       	push	r28
 508:	0f 92       	push	r0
 50a:	cd b7       	in	r28, 0x3d	; 61
 50c:	de b7       	in	r29, 0x3e	; 62
 50e:	89 83       	std	Y+1, r24	; 0x01
	 *  1 byte data
	 */



	return *(DIO_PINx[copy_u8_portID]);
 510:	89 81       	ldd	r24, Y+1	; 0x01
 512:	88 2f       	mov	r24, r24
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	88 0f       	add	r24, r24
 518:	99 1f       	adc	r25, r25
 51a:	fc 01       	movw	r30, r24
 51c:	e0 5a       	subi	r30, 0xA0	; 160
 51e:	ff 4f       	sbci	r31, 0xFF	; 255
 520:	01 90       	ld	r0, Z+
 522:	f0 81       	ld	r31, Z
 524:	e0 2d       	mov	r30, r0
 526:	80 81       	ld	r24, Z
}
 528:	0f 90       	pop	r0
 52a:	cf 91       	pop	r28
 52c:	df 91       	pop	r29
 52e:	08 95       	ret

00000530 <DIO_u8_get_pin>:

u8 DIO_u8_get_pin(u8 copy_u8_portID, u8 copy_u8_pinID){
 530:	df 93       	push	r29
 532:	cf 93       	push	r28
 534:	00 d0       	rcall	.+0      	; 0x536 <DIO_u8_get_pin+0x6>
 536:	cd b7       	in	r28, 0x3d	; 61
 538:	de b7       	in	r29, 0x3e	; 62
 53a:	89 83       	std	Y+1, r24	; 0x01
 53c:	6a 83       	std	Y+2, r22	; 0x02
	 *
	 *
	 */


	return get_Bit(*(DIO_PINx[copy_u8_portID]),copy_u8_pinID);
 53e:	89 81       	ldd	r24, Y+1	; 0x01
 540:	88 2f       	mov	r24, r24
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	88 0f       	add	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	fc 01       	movw	r30, r24
 54a:	e0 5a       	subi	r30, 0xA0	; 160
 54c:	ff 4f       	sbci	r31, 0xFF	; 255
 54e:	01 90       	ld	r0, Z+
 550:	f0 81       	ld	r31, Z
 552:	e0 2d       	mov	r30, r0
 554:	80 81       	ld	r24, Z
 556:	28 2f       	mov	r18, r24
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	8a 81       	ldd	r24, Y+2	; 0x02
 55c:	88 2f       	mov	r24, r24
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	a9 01       	movw	r20, r18
 562:	02 c0       	rjmp	.+4      	; 0x568 <DIO_u8_get_pin+0x38>
 564:	55 95       	asr	r21
 566:	47 95       	ror	r20
 568:	8a 95       	dec	r24
 56a:	e2 f7       	brpl	.-8      	; 0x564 <DIO_u8_get_pin+0x34>
 56c:	ca 01       	movw	r24, r20
 56e:	81 70       	andi	r24, 0x01	; 1
}
 570:	0f 90       	pop	r0
 572:	0f 90       	pop	r0
 574:	cf 91       	pop	r28
 576:	df 91       	pop	r29
 578:	08 95       	ret

0000057a <main>:

# include "Motor_Interface.h"
# include "DIO_Interface.h"

//hbridge
int main(){
 57a:	df 93       	push	r29
 57c:	cf 93       	push	r28
 57e:	cd b7       	in	r28, 0x3d	; 61
 580:	de b7       	in	r29, 0x3e	; 62


	return 0;
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	90 e0       	ldi	r25, 0x00	; 0
}
 586:	cf 91       	pop	r28
 588:	df 91       	pop	r29
 58a:	08 95       	ret

0000058c <motorInit>:

void motorInit(){
 58c:	df 93       	push	r29
 58e:	cf 93       	push	r28
 590:	cd b7       	in	r28, 0x3d	; 61
 592:	de b7       	in	r29, 0x3e	; 62
	DIO_void_set_pin_dir(PORTD,PIN0,OUTPUT);
 594:	83 e0       	ldi	r24, 0x03	; 3
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	41 e0       	ldi	r20, 0x01	; 1
 59a:	0e 94 5a 00 	call	0xb4	; 0xb4 <DIO_void_set_pin_dir>
	DIO_void_set_pin_dir(PORTD,PIN1,OUTPUT);
 59e:	83 e0       	ldi	r24, 0x03	; 3
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	41 e0       	ldi	r20, 0x01	; 1
 5a4:	0e 94 5a 00 	call	0xb4	; 0xb4 <DIO_void_set_pin_dir>

}
 5a8:	cf 91       	pop	r28
 5aa:	df 91       	pop	r29
 5ac:	08 95       	ret

000005ae <motorTurnRight>:

void motorTurnRight(){
 5ae:	df 93       	push	r29
 5b0:	cf 93       	push	r28
 5b2:	cd b7       	in	r28, 0x3d	; 61
 5b4:	de b7       	in	r29, 0x3e	; 62
	DIO_void_set_pin(PORTD,0);
 5b6:	83 e0       	ldi	r24, 0x03	; 3
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>
	DIO_void_set_pin(PORTD,1);
 5be:	83 e0       	ldi	r24, 0x03	; 3
 5c0:	61 e0       	ldi	r22, 0x01	; 1
 5c2:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>

}
 5c6:	cf 91       	pop	r28
 5c8:	df 91       	pop	r29
 5ca:	08 95       	ret

000005cc <motorTurnLeft>:

void motorTurnLeft(){
 5cc:	df 93       	push	r29
 5ce:	cf 93       	push	r28
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
	DIO_void_set_pin(PORTD,1);
 5d4:	83 e0       	ldi	r24, 0x03	; 3
 5d6:	61 e0       	ldi	r22, 0x01	; 1
 5d8:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>
	DIO_void_set_pin(PORTD,0);
 5dc:	83 e0       	ldi	r24, 0x03	; 3
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>

}
 5e4:	cf 91       	pop	r28
 5e6:	df 91       	pop	r29
 5e8:	08 95       	ret

000005ea <StopMotor>:
void StopMotor(){
 5ea:	df 93       	push	r29
 5ec:	cf 93       	push	r28
 5ee:	cd b7       	in	r28, 0x3d	; 61
 5f0:	de b7       	in	r29, 0x3e	; 62
	DIO_void_set_pin(PORTD,0);
 5f2:	83 e0       	ldi	r24, 0x03	; 3
 5f4:	60 e0       	ldi	r22, 0x00	; 0
 5f6:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>
	DIO_void_set_pin(PORTD,0);
 5fa:	83 e0       	ldi	r24, 0x03	; 3
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>
}
 602:	cf 91       	pop	r28
 604:	df 91       	pop	r29
 606:	08 95       	ret

00000608 <BreakMotor>:
void BreakMotor(){
 608:	df 93       	push	r29
 60a:	cf 93       	push	r28
 60c:	cd b7       	in	r28, 0x3d	; 61
 60e:	de b7       	in	r29, 0x3e	; 62
	DIO_void_set_pin(PORTD,1);
 610:	83 e0       	ldi	r24, 0x03	; 3
 612:	61 e0       	ldi	r22, 0x01	; 1
 614:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>
	DIO_void_set_pin(PORTD,1);
 618:	83 e0       	ldi	r24, 0x03	; 3
 61a:	61 e0       	ldi	r22, 0x01	; 1
 61c:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_void_set_pin>
}
 620:	cf 91       	pop	r28
 622:	df 91       	pop	r29
 624:	08 95       	ret

00000626 <_exit>:
 626:	f8 94       	cli

00000628 <__stop_program>:
 628:	ff cf       	rjmp	.-2      	; 0x628 <__stop_program>
